Chapter 01 - Inception
Link to my Code
Theory -
● What is Emmet?
	Shortcut tool that makes writing HTML/CSS quicker and easier.
	
● Difference between a Library and Framework?
	Library = Like ordering food à la carte — you pick what you want. (More flexible)
	Framework = Like a set menu — everything is pre-decided for you. (Less flexible)
	
● What is CDN? Why do we use it?
	CDN stands for Content Delivery Network.
	It is a network of servers located all around the world that help deliver content (like images, videos, CSS, JavaScript, etc.) faster to users.
	🧠 Why Do We Use CDN?
		Because it makes websites faster, safer, and more reliable for users, no matter where they are in the world.

	🌐 How a CDN Works (Simple Explanation):
		1. Your website’s files (CSS, JS, images, etc.) are stored on CDN servers in multiple locations.

		2. When a user opens your website, the content is delivered from the closest server (called an edge server).

		3. This reduces load time and server stress.
		
● Why is React known as React?
	React is named “React” because it reacts to data changes and keeps your UI in sync — fast, efficient, and automatic.	
	
● What is crossorigin in script tag?
	It tells the browser how to behave when loading a script from another domain (not your website), especially when there's error logging or security checks involved.
	
● What is diference between React and ReactDOM

	| **React**                                           | **ReactDOM**                                          |
	| --------------------------------------------------- | ----------------------------------------------------- |
	| It's the **core library**                           | It's the **tool that connects React to the browser**  |
	| Helps you **create components and manage UI logic** | Helps you **render components to the DOM (web page)** |
	| Used everywhere (including React Native)            | Used only in **web apps**                             |
	| Example: `useState`, `useEffect` come from React    | Example: `ReactDOM.render()` comes from ReactDOM      |

● What is difference between react.development.js and react.production.js files via CDN?

	| Feature            | `react.development.js` 🛠️            | `react.production.js` 🚀           |
	| ------------------ | ------------------------------------- | ---------------------------------- |
	| **Purpose**        | For **development** (while coding)    | For **production** (live websites) |
	| **File size**      | **Large** (with extra warnings)       | **Small** (minified, optimized)    |
	| **Error messages** | ✅ Full error & warning messages       | ❌ Warnings removed for performance |
	| **Performance**    | Slower (for debugging)                | Faster (for real users)            |
	| **Best use case**  | While **developing** in local machine | While **deploying** to users       |

Comparison CDN vs npm install to help you understand which one to use and when 
	
	| Feature                  | **CDN** 🌐                            | **npm install** 📦                      |
	| ------------------------ | ------------------------------------- | --------------------------------------- |
	| **What is it?**          | Loads library **directly from a URL** | Downloads library **into your project** |
	| **Best for**             | **Simple demo or testing**            | **Real projects and development**       |
	| **Offline support**      | ❌ Needs internet                      | ✅ Works offline after install           |
	| **Control over version** | ❌ Limited                             | ✅ Full control over version             |
	| **Customization**        | ❌ Limited (just link it)              | ✅ Easy to configure, customize          |
	| **Tooling**              | No build tools needed                 | Works with tools like **Webpack, Vite** |
	| **Code structure**       | No `node_modules/`, no `package.json` | Uses full **project structure**         |



● What is async and defer? - see my Youtube video ;)
	 <script src="script.js"></script>

	 The browser stops loading the page until the script is downloaded and run.
	 This can make your page load slower

	async:
    ------
		 <script src="script.js" async></script>
		 ✅ This loads script in background and runs it as soon as it's ready — it might run before the full HTML is ready!

		 🛑 Don’t use this if your script depends on the HTML being loaded.|
   defer
   -----
		<script src="script.js" defer></script>
		Order of execution matters here.
		✅ This also loads in background, but waits until the entire HTML is loaded — then it runs the script.

		✔️ Best for most scripts like app logic or DOM manipulation.
		
	| Use this when...                   | Use `async` | Use `defer` |
	| ---------------------------------- | ----------- | ----------- |
	| Script can run anytime (like ads)  | ✅ Yes       | ❌ No        |
	| Script depends on HTML being ready | ❌ No        | ✅ Yes       |
	| You want scripts to run in order   | ❌ No        | ✅ Yes       |

   
